// Redirect if trainId is missing
// let trainId = sessionStorage.getItem("selectedTrainId") || null;
let train = document.querySelector(".train");
let seatContainer = document.getElementById("seatContainer");
let vagonBtn = document.querySelectorAll(".vagonBtn");

let trainId = 15;
let selectedSeats = [];

let postObj = {
  trainId: trainId,
  // date: ,
  email: document.querySelector(`#email`).textContent,
  // phoneNumber: ,
};
// let people = [];
// let peopleinfo = {
//   seatId: ,
//   name: ,
//   surname: ,
//   idNumber: ,
//   status: "passanger",
//   payoutCompleted: true
// };

if (!trainId) {
  Swal.fire({
    text: "მატარებელი ვერ მოიძებნა. მთავარ გვერდზე დაბრუნება.",
    icon: "warning",
  }).then(() => {
    setTimeout(() => {
      window.location.href = "../index.html";
    }, 100);
  });

  throw new Error("No train ID found. Redirecting to index.");
}

fetch(`https://railway.stepprojects.ge/api/trains/${trainId}`)
  .then((resp) => resp.json())
  .then((train) => {
    showTrain(train);
    console.log("train:", train);
    attachEventListeners(train);
  });

function showTrain(obj) {
  train.innerHTML = "";
  train.innerHTML += `<div class="trainsListItem flex-row">
                  <div class="travelInfo flex-row">
                    <div class="from flex-column">
                      <p class="station">${obj.from}</p>
                      <p class="date">${obj.date}</p>
                      <p class="time">${obj.departure}</p>
                    </div>
      
                    <span class="line"></span>
                    <div class="trainInfo flex-column">
                      <p><img src="../assets/icons/favicon.svg" alt="" /></p>
                      <p class="trainNumber">${obj.number}</p>
                    </div>
                    <span class="line"></span>
      
                    <div class="to flex-column">
                      <p class="station">${obj.to}</p>
                      <p class="date">${obj.date}</p>
                      <p class="time">${obj.arrive}</p>
                    </div>
                  </div>
                </div>`;
}

function attachEventListeners(obj) {
  document.querySelectorAll(".vagonBtn").forEach((button) => {
    button.addEventListener("click", function () {
      let vagonId = obj.vagons[this.id].id;
      showSeatsModal(vagonId);
    });
  });
}

function showSeatsModal(vagonId) {
  fetch(`https://railway.stepprojects.ge/api/getvagon/${vagonId}`)
    .then((resp) => resp.json())
    .then((vagonData) => {
      console.log("Vagon data fetched:", vagonData);
      let vagon = vagonData[0];
      seatContainer.innerHTML = "";

      const sortedSeats = vagon.seats.sort((a, b) => {
        const regex = /^(\d+)([A-Za-z])$/;
        const [, numA, letterA] = a.number.match(regex);
        const [, numB, letterB] = b.number.match(regex);

        return letterA.localeCompare(letterB) || numA - numB;
      });

      document.querySelector(".chooseVagonName").textContent = `${vagon.name}`;

      sortedSeats.forEach((seat) => {
        let seatBtn = document.createElement("button");
        seatBtn.classList.add("seat", "flex-column");
        seatBtn.innerHTML = `
        <p class="seatNumber">${seat.number}</p>
        <p class="price">${seat.price}₾</p>`;
        seatBtn.id = seat.seatId;

        if (seat.isOccupied) {
          seatBtn.classList.add("occupied");
          seatBtn.setAttribute("disabled", "");
          seatBtn.title = "ადგილი დაკავებულია";
        }

        if (selectedSeats.includes(seat.seatId)) {
          seatBtn.classList.add("selected");
        }

        seatBtn.addEventListener("click", () => toggleSeatSelection(seatBtn));
        seatContainer.appendChild(seatBtn);
      });
    })
    .catch((error) => {
      console.error("Error fetching vagon data:", error);
    });
}

function toggleSeatSelection(seatBtn) {
  let seatId = seatBtn.id;
  let seatIndex = selectedSeats.indexOf(seatId);

  if (seatIndex !== -1) {
    deselectSeat(seatId);
    seatBtn.classList.remove("selected");
  } else {
    selectSeat(seatBtn);
    seatBtn.classList.add("selected");
  }

  console.log(selectedSeats);
}

// **Function to handle seat selection**
function selectSeat(seatBtn) {
  let seatId = seatBtn.id;
  let seatNumber = seatBtn.querySelector(".seatNumber").textContent;
  let seatPrice = seatBtn.querySelector(".price").textContent;
  let vagonClass = document.querySelector(".chooseVagonName").textContent;

  selectedSeats.push(seatBtn.id);
  addSeatToInvoice(seatId, seatNumber, seatPrice, vagonClass);
  addPassengerInfo(seatId, seatNumber, seatPrice);
}

// **Function to handle seat deselection**
function deselectSeat(seatId) {
  selectedSeats.splice(selectedSeats.indexOf(seatId), 1);
  removeSeatFromInvoice(seatId);
  removePassengerInfo(seatId);

  const seatBtn = document.getElementById(seatId);
  if (seatBtn) {
    seatBtn.classList.remove("selected");
  }
}

// **Function to add seat info to the invoice**
function addSeatToInvoice(seatId, seatNumber, seatPrice, vagonClass) {
  let invoiceContainer = document.querySelector(".ivoiceSeats");

  let invoiceItem = document.createElement("div");
  invoiceItem.classList.add("invoiceSeatItem", "flex-row");
  invoiceItem.id = `invoice-${seatId}`;
  invoiceItem.innerHTML = `
    <p class="invoiceSeatClass">${vagonClass}</p> 
    <p class="invoiceSeatNumber">${seatNumber}</p>
    <p class="invoiceSeatPrice">${seatPrice}</p>
    <button type="button" class="ticketDeleteBtn">
      <i class="fa-solid fa-trash-can fa-lg" title="ბილეთის წაშლა"></i>
    </button>
  `;

  invoiceItem
    .querySelector(".ticketDeleteBtn")
    .addEventListener("click", () => {
      const seatButton = document.getElementById(`invoice-${seatId}`);

      if (seatButton) {
        seatButton.classList.remove("selected");
      }

      deselectSeat(seatId);
    });

  invoiceContainer.appendChild(invoiceItem);
}

// **Function to remove seat from the invoice**
function removeSeatFromInvoice(seatId) {
  document.getElementById(`invoice-${seatId}`)?.remove();
}

// **Function to add passenger info form**
function addPassengerInfo(seatId, seatNumber, seatPrice) {
  let passengerContainer = document.querySelector(".passangerInfoList");

  let passengerInfo = document.createElement("div");
  passengerInfo.classList.add("passangerInfo", "flex-row");
  passengerInfo.id = `passenger-${seatId}`;
  passengerInfo.innerHTML = `
    <div class="seatInfo flex-column">
      <p class="seatNumber">${seatNumber}</p>
      <p class="seatPrice">${seatPrice}</p>
    </div>
    <input type="text" id="name-${seatId}" placeholder="სახელი" required />
    <input type="text" id="lastName-${seatId}" placeholder="გვარი" required />
    <input type="text" name="Idnumber-${seatId}" id="Idnumber-${seatId}" placeholder="პირადი ნომერი" required />
    <button type="button" class="ticketDeleteBtn">
      <i class="fa-solid fa-trash-can fa-xl" title="ბილეთის წაშლა"></i>
    </button>
  `;

  passengerInfo
    .querySelector(".ticketDeleteBtn")
    .addEventListener("click", () => {
      const passengerInfoId = passengerInfo.id.replace("passenger-", "");
      deselectSeat(passengerInfoId);
    });

  passengerContainer.appendChild(passengerInfo);
}

// **Function to remove passenger info form**
function removePassengerInfo(seatId) {
  document.getElementById(`passenger-${seatId}`)?.remove();
}

function bookTickets() {
  // let email = document.querySelector("#email").textContent;
  // let phoneNumber = document.querySelector("#phoneNumber").textContent;

  let people = selectedSeats.map((seatId) => {
    return {
      seatId: seatId,
      name: document.querySelector(`#name-${seatId}`).value,
      surname: document.querySelector(`#lastName-${seatId}`).value,
      idNumber: document.querySelector(`#Idnumber-${seatId}`).value,
      status: "passenger",
      payoutCompleted: true,
    };
  });

  let postObj = {
    trainId: trainId,
    date: new Date().toISOString(),
    // email: email,
    // phoneNumber: phoneNumber,
    people: people,
  };
  console.log(postObj);
  fetch("https://railway.stepprojects.ge/api/tickets/register", {
    method: "POST",
    headers: {
      Accept: "text/plain",
      "Content-Type": "application/json",
    },
    body: JSON.stringify(postObj),
  })
    .then((response) => response.json())
    .then((data) => {
      console.log("Success:", data);
      Swal.fire({
        text: "ბილეთი წარმატებით შეძენილია!",
        icon: "success",
      });
    })
    .catch((error) => {
      console.error("Error:", error);
      Swal.fire({
        text: "დაფიქსირდა შეცდომა! სცადეთ თავიდან.",
        icon: "error",
      });
    });
}

let next = document.querySelector("#passangersForm");
next.addEventListener("submit", (e) => {
  e.preventDefault();
  bookTickets();
});

// document.addEventListener("DOMContentLoaded", function () {
//   document.querySelector("#bookTicketButton").addEventListener("click", bookTickets);
// });
